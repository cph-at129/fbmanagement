var mongoose = require('mongoose');

var pageMetricsSchema = mongoose.Schema({
  about: String,
  access_token: String,
  app_links: {},
  business_id: String,
  business_name: String,
  can_checkin: Boolean,
  can_post: Boolean,
  category: String,
  category_list: [],
  checkins: Number,
  contact_address: String,
  country_page_likes: Number,
  cover: {},
  description: String,
  display_subtext: String,
  displayed_message_response_time: String,
  emails: [],
  engagement: {},
  fan_count: Number,
  general_info: String,
  genre: String,
  global_brand_page_name: String,
  has_added_app: Boolean,
  id: String,
  is_always_open: Boolean,
  is_community_page: Boolean,
  is_permanently_closed: Boolean,
  is_published: Boolean,
  is_unclaimed: Boolean,
  is_verified: Boolean,
  link: String,
  location: {},
  name: String,
  new_like_count: Number,
  phone: String,
  offer_eligible: Boolean,
  overall_star_rating: Number,
  page_stories: Number,
  page_impressions: Number,
  page_impressions_unique: Number,
  page_impressions_paid: Number,
  page_impressions_paid_unique: Number,
  page_impressions_organic: Number,
  page_impressions_organic_unique: Number,
  page_impressions_by_city_unique: {},
  page_impressions_by_country_unique: {},
  page_impressions_by_locale_unique: {},
  page_impressions_by_age_gender_unique: {},
  page_engaged_users: Number,
  page_consumptions: Number,
  page_consumptions_unique: Number,
  page_consumptions_by_consumption_type: {},
  page_consumptions_by_consumption_type_unique: {},
  page_places_checkin_total: Number,
  page_places_checkin_total_unique: Number,
  page_places_checkin_mobile: Number,
  page_places_checkin_mobile_unique: Number,
  page_negative_feedback: Number,
  page_negative_feedback_unique: Number,
  page_negative_feedback_by_type: {},
  page_negative_feedback_by_type_unique: {},
  page_positive_feedback_by_type: {},
  page_positive_feedback_by_type_unique: {},
  page_fans_online: {},
  page_fans_online_per_day: Number,
  page_fan_adds_by_paid_non_paid_unique: {},
  page_actions_post_reactions_total: {},
  page_cta_clicks_logged_in_total: {},
  page_cta_clicks_logged_in_unique: {},
  page_cta_clicks_by_site_logged_in_unique: {},
  page_cta_clicks_by_age_gender_logged_in_unique: {},
  page_fans: Number,
  page_fans_locale: {},
  page_fans_city: {},
  page_fans_country: {},
  page_fans_gender_age: {},
  page_fan_adds: Number,
  page_fan_adds_unique: Number,
  page_fans_by_like_source: Number,
  page_fans_by_like_source_unique: Number,
  page_fan_removes: Number,
  page_fan_removes_unique: Number,
  page_fans_by_unlike_source_unique: Number,
  page_views_total: Number,
  page_views_logout: Number,
  page_views_logged_in_total: Number,
  page_views_logged_in_unique: Number,
  page_video_views: Number,
  page_video_views_paid: Number,
  page_video_views_organic: Number,
  page_video_views_autoplayed: Number,
  page_video_views_click_to_play: Number,
  page_video_views_unique: Number,
  page_video_repeat_views: Number,
  page_video_complete_views_30s: Number,
  page_video_complete_views_30s_paid: Number,
  page_video_complete_views_30s_organic: Number,
  page_video_complete_views_30s_autoplayed: Number,
  page_video_complete_views_30s_click_to_play: Number,
  page_video_complete_views_30s_unique: Number,
  page_video_complete_views_30s_repeat_views: Number,
  page_posts_impressions: Number,
  page_posts_impressions_unique: Number,
  page_posts_impressions_paid: Number,
  page_posts_impressions_paid_unique: Number,
  page_posts_impressions_organic: Number,
  page_posts_impressions_organic_unique: Number,
  products: String,
  promotion_eligible: Boolean,
  rating_count: Number,
  ratings: [],
  single_line_address: String,
  start_info: {},
  talking_about_count: Number,
  unread_message_count: Number,
  unread_notif_count: Number,
  unseen_message_count: Number,
  website: String,
  were_here_count: Number,
  post_ids: [],
  scan_id: String,
  currency: {}
});

pageMetricsModel = mongoose.model('Page_Metrics', pageMetricsSchema);

module.exports = pageMetricsModel
